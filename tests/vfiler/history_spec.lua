local History = require('vfiler/libs/history')

describe('History', function()
  describe('Save', function()
    it('for empty', function()
      local history = History.new(5)

      history:save('path1')
      history:save('current')
      local items = history:items()

      assert.equal(#items, 1)
      assert.equal(items[1], 'path1')
    end)

    it('until full', function()
      local history = History.new(5)

      history:save('path1')
      history:save('path2')
      history:save('path3')
      history:save('path4')
      history:save('path5')
      history:save('current')
      local items = history:items()

      assert.equal(#items, 5)
      assert.equal(items[1], 'path5')
      assert.equal(items[2], 'path4')
      assert.equal(items[3], 'path3')
      assert.equal(items[4], 'path2')
      assert.equal(items[5], 'path1')
    end)

    describe('duplicated', function()
      it('with first on non-full', function()
        local history = History.new(5)
        history:save('path1')
        history:save('path2')
        history:save('path3')

        history:save('path1')
        history:save('current')
        local items = history:items()

        assert.equal(#items, 3)
        assert.equal(items[1], 'path1')
        assert.equal(items[2], 'path3')
        assert.equal(items[3], 'path2')
      end)

      it('with last on non-full', function()
        local history = History.new(5)
        history:save('path1')
        history:save('path2')
        history:save('path3')

        history:save('path3')
        history:save('current')
        local items = history:items()

        assert.equal(#items, 3)
        assert.equal(items[1], 'path3')
        assert.equal(items[2], 'path2')
        assert.equal(items[3], 'path1')
      end)

      it('with first on full', function()
        local history = History.new(5)
        history:save('path1')
        history:save('path2')
        history:save('path3')
        history:save('path4')
        history:save('path5')

        history:save('path1')
        history:save('current')
        local items = history:items()

        assert.equal(#items, 5)
        assert.equal(items[1], 'path1')
        assert.equal(items[2], 'path5')
        assert.equal(items[3], 'path4')
        assert.equal(items[4], 'path3')
        assert.equal(items[5], 'path2')
      end)

      it('with middle on full', function()
        local history = History.new(5)
        history:save('path1')
        history:save('path2')
        history:save('path3')
        history:save('path4')
        history:save('path5')

        history:save('path3')
        history:save('current')
        local items = history:items()

        assert.equal(#items, 5)
        assert.equal(items[1], 'path3')
        assert.equal(items[2], 'path5')
        assert.equal(items[3], 'path4')
        assert.equal(items[4], 'path2')
        assert.equal(items[5], 'path1')
      end)

      it('with last on full', function()
        local history = History.new(5)
        history:save('path1')
        history:save('path2')
        history:save('path3')
        history:save('path4')
        history:save('path5')

        history:save('path5')
        history:save('current')
        local items = history:items()

        assert.equal(#items, 5)
        assert.equal(items[1], 'path5')
        assert.equal(items[2], 'path4')
        assert.equal(items[3], 'path3')
        assert.equal(items[4], 'path2')
        assert.equal(items[5], 'path1')
      end)

      it('with first on rotated', function()
        local history = History.new(5)
        history:save('path1')
        history:save('path2')
        history:save('path3')
        history:save('path4')
        history:save('path5')
        history:save('path6')
        history:save('path7')
        history:save('path8')

        history:save('path4')
        history:save('current')
        local items = history:items()

        assert.equal(#items, 5)
        assert.equal(items[1], 'path4')
        assert.equal(items[2], 'path8')
        assert.equal(items[3], 'path7')
        assert.equal(items[4], 'path6')
        assert.equal(items[5], 'path5')
      end)

      it('to middle on rotated', function()
        local history = History.new(5)
        history:save('path1')
        history:save('path2')
        history:save('path3')
        history:save('path4')
        history:save('path5')
        history:save('path6')
        history:save('path7')
        history:save('path8')

        history:save('path6')
        history:save('current')
        local items = history:items()

        assert.equal(#items, 5)
        assert.equal(items[1], 'path6')
        assert.equal(items[2], 'path8')
        assert.equal(items[3], 'path7')
        assert.equal(items[4], 'path5')
        assert.equal(items[5], 'path4')
      end)

      it('to last on rotated', function()
        local history = History.new(5)
        history:save('path1')
        history:save('path2')
        history:save('path3')
        history:save('path4')
        history:save('path5')
        history:save('path6')
        history:save('path7')
        history:save('path8')

        history:save('path8')
        history:save('current')
        local items = history:items()

        assert.equal(#items, 5)
        assert.equal(items[1], 'path8')
        assert.equal(items[2], 'path7')
        assert.equal(items[3], 'path6')
        assert.equal(items[4], 'path5')
        assert.equal(items[5], 'path4')
      end)
    end)
  end)
end)
